{"basePath":"http://ec2-67-202-40-92.compute-1.amazonaws.com","swagrVersion":"0.2","apiVersion":"1.1","apis":[{"operations":[{"errorResponses":[{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of containers definitions","httpMethod":"GET","parameters":[{"paramType":"path","description":"The unique id of topology that container(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true}],"nickname":"get_list_of_containers","deprecated":false}],"description":"Show a list of containers definitions","path":"/api/topologies/{topology_id}/containers"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Create a new containers definition","httpMethod":"POST","notes":"Container is used to contain node(s). Node(s) inside container can be scaled by 'num_of_copies' attribute.  Users have 2 options to create a container: provide an XML definition or just provide the name(optionally together with the number of copies).","parameters":[{"paramType":"path","description":"The unique id of topology which the list of containers belong to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"body","description":"This file should be an XML document to describe the container","dataType":"string","allowMultiple":false,"name":"definition","required":false},{"paramType":"query","description":"The name of the container to be created","dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"query","description":"The number of copies property. Each node inside this container will be scaled by this number of copies. Default is one","dataType":"integer","allowMultiple":false,"name":"num_of_copies","required":false}],"nickname":"create_container","deprecated":false}],"description":"Create a new containers definition","path":"/api/topologies/{topology_id}/containers"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Get the container definition with id","httpMethod":"GET","parameters":[{"paramType":"path","description":"The unique id of topology which the container belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of container","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"get_container_by_id","deprecated":false}],"description":"Get the container definition with id","path":"/api/topologies/{topology_id}/containers/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Delete the container definition","httpMethod":"DELETE","parameters":[{"paramType":"path","description":"The unique id of topology which the container belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of container","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"delete_container_by_id","deprecated":false}],"description":"Delete the container definition","path":"/api/topologies/{topology_id}/containers/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Modify the definition of the container","httpMethod":"PUT","notes":"Container is used to contain node(s). Node(s) inside container can be scaled by 'num_of_copies' attribute. User can change the name of the container or change the 'num_of_copies' attribute of the container","parameters":[{"paramType":"path","description":"The unique id of topology which the container belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of container","dataType":"integer","allowMultiple":false,"name":"id","required":true},{"paramType":"query","description":"The operatoin to execute","allowableValues":{"values":["rename","scale"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"operation","required":true},{"paramType":"query","description":"The new name. Used with 'rename' operation","dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"query","description":"The number of copies property. Each node inside this container will be scaled by this number of copies. Used with 'scale' operation","dataType":"integer","allowMultiple":false,"name":"num_of_copies","required":false}],"nickname":"modify_container_by_id","deprecated":false}],"description":"Modify the definition of the container","path":"/api/topologies/{topology_id}/containers/{id}"}]}
