{"basePath":"http://ec2-67-202-40-92.compute-1.amazonaws.com","swagrVersion":"0.2","apiVersion":"1.1","apis":[{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of template that contains the service(s)","dataType":"integer","allowMultiple":false,"name":"template_id","required":true}],"nickname":"get_list_of_services","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/templates/{template_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the services(s)","dataType":"integer","allowMultiple":false,"name":"node_id","required":true}],"nickname":"get_list_of_services","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/nodes/{node_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the container that the service(s) belong to","dataType":"integer","allowMultiple":false,"name":"container_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the services(s)","dataType":"integer","allowMultiple":false,"name":"node_id","required":true}],"nickname":"get_list_of_services","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/containers/{container_id}/nodes/{node_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Create a service node definition","httpMethod":"POST","notes":"Users can create a service by providing an XML document or just providing the name. The services available so far is list below<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that the created service belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of template that contains the created service","dataType":"integer","allowMultiple":false,"name":"template_id","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"create_service","deprecated":false}],"description":"Create a service node definition","path":"/api/topologies/{topology_id}/templates/{template_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Create a service node definition","httpMethod":"POST","notes":"Users can create a service by providing an XML document or just providing the name. The services available so far is list below<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that the created service belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the created service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"create_service","deprecated":false}],"description":"Create a service node definition","path":"/api/topologies/{topology_id}/nodes/{node_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Create a service node definition","httpMethod":"POST","notes":"Users can create a service by providing an XML document or just providing the name. The services available so far is list below<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that the created service belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the container that the service(s) belong to","dataType":"integer","allowMultiple":false,"name":"container_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the created service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"create_service","deprecated":false}],"description":"Create a service node definition","path":"/api/topologies/{topology_id}/containers/{container_id}/nodes/{node_id}/services"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of template that contains the service(s)","dataType":"integer","allowMultiple":false,"name":"template_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"get_service_by_id","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/templates/{template_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the created service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"get_service_by_id","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/nodes/{node_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of service definitions","httpMethod":"GET","notes":"Show a list of service definitions. In implementation point of view, each service match a set of scripts that will run on deployed instance.","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the container that the service(s) belong to","dataType":"integer","allowMultiple":false,"name":"container_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the created service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"get_service_by_id","deprecated":false}],"description":"Show a list of service definitions","path":"/api/topologies/{topology_id}/containers/{container_id}/nodes/{node_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Delete the service definition","httpMethod":"DELETE","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of template that contains the service(s)","dataType":"integer","allowMultiple":false,"name":"template_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"delete_service_by_id","deprecated":false}],"description":"Delete the service definition","path":"/api/topologies/{topology_id}/templates/{template_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Delete the service definition","httpMethod":"DELETE","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"delete_service_by_id","deprecated":false}],"description":"Delete the service definition","path":"/api/topologies/{topology_id}/nodes/{node_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Delete the service definition","httpMethod":"DELETE","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the container that the service belong to","dataType":"integer","allowMultiple":false,"name":"container_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"delete_service_by_id","deprecated":false}],"description":"Delete the service definition","path":"/api/topologies/{topology_id}/containers/{container_id}/nodes/{node_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Modify the service definition","httpMethod":"PUT","notes":"User can 'rename' or 'redefine' the service. If redefine, user needs to provide a new XML document as service definition.<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of template that contains the service(s)","dataType":"integer","allowMultiple":false,"name":"template_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true},{"paramType":"query","description":"The operatoin to execute","allowableValues":{"values":["rename","redefine"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"operation","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"modify_service_by_id","deprecated":false}],"description":"Modify the service definition","path":"/api/topologies/{topology_id}/templates/{template_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Modify the service definition","httpMethod":"PUT","notes":"User can 'rename' or 'redefine' the service. If redefine, user needs to provide a new XML document as service definition.<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true},{"paramType":"query","description":"The operatoin to execute","allowableValues":{"values":["rename","redefine"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"operation","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"modify_service_by_id","deprecated":false}],"description":"Modify the service definition","path":"/api/topologies/{topology_id}/nodes/{node_id}/services/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Modify the service definition","httpMethod":"PUT","notes":"User can 'rename' or 'redefine' the service. If redefine, user needs to provide a new XML document as service definition.<h4>Available services</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>database_server</td><td>Install an MySQL database server</td></tr><tr><td>snort</td><td>Config server as snort node for network instrusion prevention</td></tr><tr><td>openvpn_server</td><td>Config server as an openvpn server(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>ossec_client</td><td>Config server to use the services from ossec, which is an host-base protection system. (Prerequisites: supporting services 'host_protection' must be enabled)</td></tr><tr><td>snort_prepost</td><td>Config server to connect to snort node</td></tr><tr><td>openvpn_client</td><td>Config server as an openvpn client(Prerequisites: supporting services 'openvpn' must be enabled)</td></tr><tr><td>web_server</td><td>Install an Tomcat6 application server</td></tr><tr><td>web_balancer</td><td>Install Apache and enable its load balancing modules</td></tr><tr><td>dns_client</td><td>Config server as members of load balancing dns. The dns will despatch requests to its members for load balacing purpose. (Prerequisites: supporting services 'dns' must be enabled)</td></tr><tr><td>client_installation</td><td>Install client coponents of this application, an installed server is required</td></tr><tr><td>server_installation</td><td>Install server components of this application, which is actually a Chef server</td></tr><tr><td>virsh</td><td>Install an virtual machine, which allow nested instance on top of existing instance</td></tr><tr><td>standalone_installation</td><td>Install this application without a server</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that service(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the container that the service belong to","dataType":"integer","allowMultiple":false,"name":"container_id","required":true},{"paramType":"path","description":"The unique id of the node that contains the service","dataType":"integer","allowMultiple":false,"name":"node_id","required":true},{"paramType":"path","description":"The unique id of the service","dataType":"integer","allowMultiple":false,"name":"id","required":true},{"paramType":"query","description":"The operatoin to execute","allowableValues":{"values":["rename","redefine"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"operation","required":true},{"paramType":"query","description":"The new name of the service. Used in operation 'rename' operation","allowableValues":{"values":["database_server","snort","openvpn_server","ossec_client","snort_prepost","openvpn_client","web_server","web_balancer","dns_client","client_installation","server_installation","virsh","standalone_installation"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"body","description":"An XML document that describe the new service. Use in 'redefine'","dataType":"string","allowMultiple":false,"name":"definition","required":false}],"nickname":"modify_service_by_id","deprecated":false}],"description":"Modify the service definition","path":"/api/topologies/{topology_id}/containers/{container_id}/nodes/{node_id}/services/{id}"}]}
