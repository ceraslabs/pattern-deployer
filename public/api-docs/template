{"basePath":"http://ec2-67-202-40-92.compute-1.amazonaws.com","swagrVersion":"0.2","apiVersion":"1.1","apis":[{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a list of templates definitions","httpMethod":"GET","parameters":[{"paramType":"path","description":"The unique id of topology that template(s) belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true}],"nickname":"get_list_of_templates","deprecated":false}],"description":"Show a list of templates definitions","path":"/api/topologies/{topology_id}/templates"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Create a new template definition","httpMethod":"POST","notes":"Template is introduced to provide a template for node definition. For example, if the several nodes share the same set of attributes/services, user can wrap those common attributes/services in a template and let the node to use that template. In addition, template can extend another template(s). If several templates share the same set of attributes/services, user can package those common definition in a base template and let the defining templates extend the base template. User can define a list of attributes of the template as they do for node<h4>Supported attributes</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>security_groups</td><td>list of security groups the node is using. Groups are comma-seperated if more than one.</td></tr><tr><td>ssh_user</td><td>The ssh username</td></tr><tr><td>port</td><td>The ssh port. Port 22 will be used if this attribute is not set</td></tr><tr><td>cloud</td><td>The cloud this node deploy to. So far, we supported ec2, openstack</td></tr><tr><td>instance_type</td><td>The type of the instance. For EC2, it can be 't1.micro', 'm1.small', etc. For OpenStack, it is the *ID* of instance flavor(not the name).</td></tr><tr><td>key_pair_id</td><td>The ssh key pair id which is used to create the instance</td></tr><tr><td>availability_zone</td><td>The Availability Zone. Used in EC2.</td></tr><tr><td>image_id</td><td>The id of the image the node will use</td></tr><tr><td>password</td><td>The ssh password</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that created template belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"body","description":"The XML document that defines the template","dataType":"string","allowMultiple":false,"name":"definition","required":false},{"paramType":"query","description":"The name of the template to be created. The name must be unique within topology","dataType":"string","allowMultiple":false,"name":"name","required":false}],"nickname":"create_template","deprecated":false}],"description":"Create a new template definition","path":"/api/topologies/{topology_id}/templates"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Show a template definition by id","httpMethod":"GET","parameters":[{"paramType":"path","description":"The unique id of topology that the template belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the template","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"get_template_by_id","deprecated":false}],"description":"Show a template definition by id","path":"/api/topologies/{topology_id}/templates/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Delete the template definition","httpMethod":"DELETE","parameters":[{"paramType":"path","description":"The unique id of topology that template belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the template","dataType":"integer","allowMultiple":false,"name":"id","required":true}],"nickname":"delete_template_by_id","deprecated":false}],"description":"Delete the template definition","path":"/api/topologies/{topology_id}/templates/{id}"},{"operations":[{"errorResponses":[{"code":400,"reason":"user provided invalid parameter(s)"},{"code":401,"reason":"user haven't logined"},{"code":403,"reason":"user doesnot have permission for this operation"},{"code":500,"reason":"some weird error occurs, possibly due to bug(s)"}],"summary":"Modify the definition of the template","httpMethod":"PUT","notes":"User can rename the template, add/remove base templates, or set/remove attributes of the template. Template is introduced to provide a template for node definition. For example, if the several nodes share the same set of attributes/services, user can wrap those common attributes/services in a template and let the node to use that template. In addition, template can extend another template(s). If several templates share the same set of attributes/services, user can package those common definition in a base template and let the defining templates extend the base template. User can define a list of attributes of the template as they do for node<h4>Supported attributes</h4><table><thead><tr><th>attribut key</th><th>description</th></tr></thead><tr><td>security_groups</td><td>list of security groups the node is using. Groups are comma-seperated if more than one.</td></tr><tr><td>ssh_user</td><td>The ssh username</td></tr><tr><td>port</td><td>The ssh port. Port 22 will be used if this attribute is not set</td></tr><tr><td>cloud</td><td>The cloud this node deploy to. So far, we supported ec2, openstack</td></tr><tr><td>instance_type</td><td>The type of the instance. For EC2, it can be 't1.micro', 'm1.small', etc. For OpenStack, it is the *ID* of instance flavor(not the name).</td></tr><tr><td>key_pair_id</td><td>The ssh key pair id which is used to create the instance</td></tr><tr><td>availability_zone</td><td>The Availability Zone. Used in EC2.</td></tr><tr><td>image_id</td><td>The id of the image the node will use</td></tr><tr><td>password</td><td>The ssh password</td></tr></table>","parameters":[{"paramType":"path","description":"The unique id of topology that template belongs to","dataType":"integer","allowMultiple":false,"name":"topology_id","required":true},{"paramType":"path","description":"The unique id of the template","dataType":"integer","allowMultiple":false,"name":"id","required":true},{"paramType":"query","description":"The operatoin to execute","allowableValues":{"values":["rename","extend","unextend","set_attribute","remove_attribute"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"operation","required":true},{"paramType":"query","description":"The new name of the template. Used in operation 'rename' operation","dataType":"string","allowMultiple":false,"name":"name","required":false},{"paramType":"query","description":"The name of the base template to be added/removed. Use in 'extend' or 'unextend'","dataType":"string","allowMultiple":false,"name":"base_template","required":false},{"paramType":"query","description":"The key of the attribute to be set/remove. Use in 'set_attribute' or 'remove_attribute'","allowableValues":{"values":["security_groups","ssh_user","port","cloud","instance_type","key_pair_id","availability_zone","image_id","password"],"valueType":"LIST"},"dataType":"string","allowMultiple":false,"name":"attribute_key","required":false},{"paramType":"query","description":"The value of the attribute to be set. Use in 'set_attribute'","dataType":"string","allowMultiple":false,"name":"attribute_value","required":false}],"nickname":"modify_template_by_id","deprecated":false}],"description":"Modify the definition of the template","path":"/api/topologies/{topology_id}/templates/{id}"}]}
