{
  "apiVersion": "0.2",
  "apis": [
    {
      "description": "Show a list of uploaded files",
      "operations": [
        {
          "deprecated": false,
          "errorResponses": [
            {
              "code": 401,
              "reason": "user haven't logined"
            },
            {
              "code": 403,
              "reason": "user doesnot have permission for this operation"
            },
            {
              "code": 500,
              "reason": "some weird error occurs, possibly due to bug(s)"
            }
          ],
          "httpMethod": "GET",
          "nickname": "getFiles",
          "responseClass": "UploadedFiles",
          "summary": "Show a list of uploaded files"
        }
      ],
      "path": "/uploaded_files"
    },
    {
      "description": "Upload a file",
      "operations": [
        {
          "deprecated": false,
          "errorResponses": [
            {
              "code": 400,
              "reason": "user provided invalid parameter(s)"
            },
            {
              "code": 401,
              "reason": "user haven't logined"
            },
            {
              "code": 403,
              "reason": "user doesnot have permission for this operation"
            },
            {
              "code": 500,
              "reason": "some weird error occurs, possibly due to bug(s)"
            }
          ],
          "httpMethod": "POST",
          "nickname": "createFile",
          "notes": "User need to provide a name for the created file. Depending on file type, user may need to fill additional parameter(s)<h4>File types</h4><table><thead><tr><th>type</th><th>description</th></tr></thead><tr><td>identity_file</td><td>Identity file contains private key that is used to ssh to the deployed instance. An identity file should match a keypair of the cloud and should have an suffix '.pem'</td></tr><tr><td>sql_script_file</td><td>An sql script file which is used to setup the schema/tables of database</td></tr><tr><td>war_file</td><td>Java application archive. An war file should have suffix '.war'</td></tr></table>",
          "parameters": [
            {
              "allowMultiple": false,
              "dataType": "file",
              "description": "The uploaded file",
              "name": "file",
              "paramType": "body",
              "required": true
            },
            {
              "allowMultiple": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "identity_file",
                  "sql_script_file",
                  "war_file"
                ]
              },
              "dataType": "string",
              "description": "The type of the uploaded file",
              "name": "file_type",
              "paramType": "query",
              "required": true
            },
            {
              "allowMultiple": false,
              "dataType": "string",
              "description": "The name of the uploaded file. Use this parameter if user want a name different from the orignal file name.",
              "name": "file_name",
              "paramType": "query",
              "required": false
            },
            {
              "allowMultiple": false,
              "dataType": "string",
              "description": "The key pair id of the identify file",
              "name": "key_pair_id",
              "paramType": "query",
              "required": false
            },
            {
              "allowMultiple": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "ec2",
                  "openstack"
                ]
              },
              "dataType": "string",
              "description": "The cloud where this key pair belongs to",
              "name": "for_cloud",
              "paramType": "query",
              "required": false
            }
          ],
          "responseClass": "UploadedFile",
          "summary": "Upload a file"
        }
      ],
      "path": "/uploaded_files"
    },
    {
      "description": "Delete the uploaded file by id",
      "operations": [
        {
          "deprecated": false,
          "errorResponses": [
            {
              "code": 400,
              "reason": "user provided invalid parameter(s)"
            },
            {
              "code": 401,
              "reason": "user haven't logined"
            },
            {
              "code": 403,
              "reason": "user doesnot have permission for this operation"
            },
            {
              "code": 500,
              "reason": "some weird error occurs, possibly due to bug(s)"
            }
          ],
          "httpMethod": "GET",
          "nickname": "getFileById",
          "parameters": [
            {
              "allowMultiple": false,
              "dataType": "int",
              "description": "The unique id of the uploaded file",
              "name": "id",
              "paramType": "path",
              "required": true
            }
          ],
          "responseClass": "UploadedFile",
          "summary": "Delete the uploaded file by id"
        }
      ],
      "path": "/uploaded_files/{id}"
    },
    {
      "description": "Delete the uploaded file by id",
      "operations": [
        {
          "deprecated": false,
          "errorResponses": [
            {
              "code": 400,
              "reason": "user provided invalid parameter(s)"
            },
            {
              "code": 401,
              "reason": "user haven't logined"
            },
            {
              "code": 403,
              "reason": "user doesnot have permission for this operation"
            },
            {
              "code": 500,
              "reason": "some weird error occurs, possibly due to bug(s)"
            }
          ],
          "httpMethod": "DELETE",
          "nickname": "deleteFileById",
          "parameters": [
            {
              "allowMultiple": false,
              "dataType": "int",
              "description": "The unique id of uploaded file",
              "name": "id",
              "paramType": "path",
              "required": true
            }
          ],
          "responseClass": "UploadedFiles",
          "summary": "Delete the uploaded file by id"
        }
      ],
      "path": "/uploaded_files/{id}"
    },
    {
      "description": "Modify the uploaded file by id",
      "operations": [
        {
          "deprecated": false,
          "errorResponses": [
            {
              "code": 400,
              "reason": "user provided invalid parameter(s)"
            },
            {
              "code": 401,
              "reason": "user haven't logined"
            },
            {
              "code": 403,
              "reason": "user doesnot have permission for this operation"
            },
            {
              "code": 500,
              "reason": "some weird error occurs, possibly due to bug(s)"
            }
          ],
          "httpMethod": "PUT",
          "nickname": "modifyFileById",
          "parameters": [
            {
              "allowMultiple": false,
              "dataType": "int",
              "description": "The unique id of uploaded file",
              "name": "id",
              "paramType": "path",
              "required": true
            },
            {
              "allowMultiple": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "rename",
                  "reupload"
                ]
              },
              "dataType": "string",
              "description": "The operation to execute",
              "name": "operation",
              "paramType": "query",
              "required": true
            },
            {
              "allowMultiple": false,
              "dataType": "file",
              "description": "The new file. Used with 'reupload' operation",
              "name": "file",
              "paramType": "body",
              "required": false
            },
            {
              "allowMultiple": false,
              "dataType": "string",
              "description": "The new file name. Used with 'rename' operation",
              "name": "file_name",
              "paramType": "query",
              "required": false
            }
          ],
          "responseClass": "UploadedFile",
          "summary": "Modify the uploaded file by id"
        }
      ],
      "path": "/uploaded_files/{id}"
    }
  ],
  "basePath": "<%= request.protocol + request.host_with_port %>/api",
  "models": {
    "UploadedFile": {
      "id": "UploadedFile",
      "properties": {
        "fileName": {
          "description": "The name of the uploaded file",
          "type": "string"
        },
        "fileType": {
          "allowableValues": {
            "valueType": "LIST",
            "values": [
              "identity_file",
              "sql_script_file",
              "war_file"
            ]
          },
          "description": "The type of the uploaded file",
          "type": "string"
        },
        "forCloud": {
          "allowableValues": {
            "valueType": "LIST",
            "values": [
              "ec2",
              "openstack"
            ]
          },
          "description": "The cloud that the identity file belongs to",
          "type": "string"
        },
        "id": {
          "description": "The id of the uploaded file",
          "type": "int"
        },
        "keyPairId": {
          "description": "The key pair id of the identity file",
          "type": "string"
        },
        "link": {
          "description": "The link of the uploaded file",
          "type": "string"
        }
      }
    },
    "UploadedFiles": {
      "id": "UploadedFiles",
      "properties": {
        "all": {
          "description": "The information of the uploaded files",
          "items": {
            "$ref": "UploadedFile"
          },
          "type": "List"
        }
      }
    }
  },
  "resourcePath": "/uploaded_files",
  "swaggerVersion": "1.1"
}